From b2463b235ceecdab441a29354017092f6b128d44 Mon Sep 17 00:00:00 2001
From: Noah Goldstein <goldstein.w.n@gmail.com>
Date: Sun, 22 Aug 2021 23:44:49 -0400
Subject: [PATCH 12/12] p2aling for avx

---
 .../multiarch/memmove-vec-unaligned-erms.S    | 44 ++++++++++---------
 1 file changed, 23 insertions(+), 21 deletions(-)

diff --git a/sysdeps/x86_64/multiarch/memmove-vec-unaligned-erms.S b/sysdeps/x86_64/multiarch/memmove-vec-unaligned-erms.S
index 522ce88ab9..ee09b00730 100644
--- a/sysdeps/x86_64/multiarch/memmove-vec-unaligned-erms.S
+++ b/sysdeps/x86_64/multiarch/memmove-vec-unaligned-erms.S
@@ -406,6 +406,25 @@ L(copy_8_15):
 	ret
 #endif
 
+#if defined USE_MULTIARCH && IS_IN (libc)
+L(movsb):
+	movq	%rdi, %rcx
+	subq	%rsi, %rcx
+	cmpq	%rdx, %rcx
+	jb	L(more_8x_vec_backward_check_nop)
+	cmp	__x86_rep_movsb_stop_threshold(%rip), %RDX_LP
+	jae	L(large_memcpy_2x_check)
+# if AVOID_SHORT_DISTANCE_REP_MOVSB
+	andl	$X86_STRING_CONTROL_AVOID_SHORT_DISTANCE_REP_MOVSB, __x86_string_control(%rip)
+	jz	L(skip_short_movsb_check)
+	cmpl	$-64, %ecx
+	ja	L(more_8x_vec_forward)
+L(skip_short_movsb_check):
+# endif
+	mov	%RDX_LP, %RCX_LP
+	rep	movsb
+	ret
+#endif
 
 
 #if defined USE_MULTIARCH && IS_IN (libc)
@@ -451,8 +470,11 @@ L(last_4x_vec):
 	VMOVU	%VEC(3), -(VEC_SIZE * 2)(%rdi, %rdx)
 L(nop):
 	VZEROUPPER_RETURN
-
+#ifdef USE_WITH_AVX
+	.p2align 5
+#else
 	.p2align 4,, 10
+#endif
 L(more_8x_vec):
 	/* Check if non-temporal move candidate.  */
 #if (!defined USE_MULTIARCH && VEC_SIZE == 16) && IS_IN (libc)
@@ -551,26 +573,6 @@ L(loop_4x_vec_backward):
 	VMOVU	%VEC(8), -VEC_SIZE(%rdx, %rcx)
 	VZEROUPPER_RETURN
 
-#if defined USE_MULTIARCH && IS_IN (libc)
-	.p2align 4
-L(movsb):
-	movq	%rdi, %rcx
-	subq	%rsi, %rcx
-	cmpq	%rdx, %rcx
-	jb	L(more_8x_vec_backward_check_nop)
-	cmp	__x86_rep_movsb_stop_threshold(%rip), %RDX_LP
-	jae	L(large_memcpy_2x_check)
-# if AVOID_SHORT_DISTANCE_REP_MOVSB
-	andl	$X86_STRING_CONTROL_AVOID_SHORT_DISTANCE_REP_MOVSB, __x86_string_control(%rip)
-	jz	L(skip_short_movsb_check)
-	cmpl	$-64, %ecx
-	ja	L(more_8x_vec_forward)
-L(skip_short_movsb_check):
-# endif
-	mov	%RDX_LP, %RCX_LP
-	rep	movsb
-	ret
-#endif
 
 
 #if (defined USE_MULTIARCH || VEC_SIZE == 16) && IS_IN (libc)
-- 
2.25.1

