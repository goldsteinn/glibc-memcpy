From 521df819b1e704b975155444bb480fc6c7ac7a5c Mon Sep 17 00:00:00 2001
From: Noah Goldstein <goldstein.w.n@gmail.com>
Date: Sun, 5 Sep 2021 19:22:43 -0500
Subject: [PATCH 5/5] latency benchtests

---
 benchtests/bench-memcpy-random.c | 16 ++++++++++++++--
 benchtests/bench-memcpy.c        |  6 ++++--
 benchtests/bench-memmove-walk.c  |  2 ++
 benchtests/bench-memmove.c       |  6 ++++--
 4 files changed, 24 insertions(+), 6 deletions(-)

diff --git a/benchtests/bench-memcpy-random.c b/benchtests/bench-memcpy-random.c
index bf926adc86..aca74c750f 100644
--- a/benchtests/bench-memcpy-random.c
+++ b/benchtests/bench-memcpy-random.c
@@ -23,7 +23,7 @@
 #include "bench-string.h"
 #include <assert.h>
 #include "json-lib.h"
-
+#define LFENCE asm volatile("lfence" : : :);
 #define MAX_COPIES 8192
 
 IMPL (memcpy, 1)
@@ -134,10 +134,17 @@ do_one_test (json_ctx_t *json_ctx, impl_t *impl, char *dst, char *src,
   for (int j = 0; j < n; j++)
     CALL (impl, dst + copy[j].dst, src + copy[j].src, copy[j].len);
 
+  LFENCE;
   TIMING_NOW (start);
   for (int i = 0; i < iters; ++i)
+  {
     for (int j = 0; j < n; j++)
+    {
       CALL (impl, dst + copy[j].dst, src + copy[j].src, copy[j].len);
+      LFENCE;
+    }
+  }
+  LFENCE;
   TIMING_NOW (stop);
 
   TIMING_DIFF (cur, start, stop);
@@ -154,11 +161,16 @@ do_one_fixed_test (json_ctx_t *json_ctx, impl_t *impl, char *dst, char *src,
 
   for (int j = 0; j < n; j++)
     CALL (impl, dst + copy[j].dst, src + copy[j].src, size);
-
+  LFENCE;
   TIMING_NOW (start);
   for (int i = 0; i < iters; ++i)
+  {
     for (int j = 0; j < n; j++)
+    {
       CALL (impl, dst + copy[j].dst, src + copy[j].src, size);
+      LFENCE;
+    }
+  }
   TIMING_NOW (stop);
 
   TIMING_DIFF (cur, start, stop);
diff --git a/benchtests/bench-memcpy.c b/benchtests/bench-memcpy.c
index 9b33a2179d..a8395b813a 100644
--- a/benchtests/bench-memcpy.c
+++ b/benchtests/bench-memcpy.c
@@ -15,7 +15,7 @@
    You should have received a copy of the GNU Lesser General Public
    License along with the GNU C Library; if not, see
    <https://www.gnu.org/licenses/>.  */
-
+#define LFENCE asm volatile("lfence" : : :);
 #ifndef MEMCPY_RESULT
 # define MEMCPY_RESULT(dst, len) dst
 # define MIN_PAGE_SIZE 131072
@@ -44,13 +44,15 @@ do_one_test (json_ctx_t *json_ctx, impl_t *impl, char *dst, const char *src,
     {
       CALL (impl, dst, src, len);
     }
+  LFENCE;
   TIMING_NOW (start);
   for (i = 0; i < iters; ++i)
     {
       CALL (impl, dst, src, len);
+      LFENCE;
     }
   TIMING_NOW (stop);
-
+  LFENCE;
   TIMING_DIFF (cur, start, stop);
 
   json_element_double (json_ctx, (double) cur / (double) iters);
diff --git a/benchtests/bench-memmove-walk.c b/benchtests/bench-memmove-walk.c
index 18b716f5cb..723e336a9e 100644
--- a/benchtests/bench-memmove-walk.c
+++ b/benchtests/bench-memmove-walk.c
@@ -60,7 +60,9 @@ do_one_test (json_ctx_t *json_ctx, impl_t *impl, char *dst, char *src,
   TIMING_NOW (start);
   /* Copy the entire buffer backwards, LEN at a time.  */
   for (; src_end >= src && dst <= dst_end; dst += len, src_end -= len, i++)
+  {
     CALL (impl, dst, src_end, len);
+  }
   TIMING_NOW (stop);
 
   TIMING_DIFF (cur, start, stop);
diff --git a/benchtests/bench-memmove.c b/benchtests/bench-memmove.c
index 855f4d0649..eec349fcea 100644
--- a/benchtests/bench-memmove.c
+++ b/benchtests/bench-memmove.c
@@ -15,7 +15,7 @@
    You should have received a copy of the GNU Lesser General Public
    License along with the GNU C Library; if not, see
    <https://www.gnu.org/licenses/>.  */
-
+#define LFENCE asm volatile("lfence" : : :);
 #define TEST_MAIN
 #define TEST_NAME "memmove"
 #include "bench-string.h"
@@ -38,13 +38,15 @@ do_one_test (json_ctx_t *json_ctx, impl_t *impl, char *dst, char *src,
     {
       CALL (impl, dst, src, len);
     }
+  LFENCE;
   TIMING_NOW (start);
   for (i = 0; i < iters; ++i)
     {
       CALL (impl, dst, src, len);
+      LFENCE;
     }
   TIMING_NOW (stop);
-
+  LFENCE;
   TIMING_DIFF (cur, start, stop);
 
   json_element_double (json_ctx, (double) cur / (double) iters);
-- 
2.25.1

