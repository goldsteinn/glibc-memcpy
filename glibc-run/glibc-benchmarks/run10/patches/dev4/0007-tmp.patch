From 92cac9895ea1307f9344945879fd9ea654701a7a Mon Sep 17 00:00:00 2001
From: Noah Goldstein <goldstein.w.n@gmail.com>
Date: Thu, 26 Aug 2021 17:17:55 -0400
Subject: [PATCH 7/8] tmp

---
 .../multiarch/memmove-vec-unaligned-erms.S     | 18 ++++++++++--------
 1 file changed, 10 insertions(+), 8 deletions(-)

diff --git a/sysdeps/x86_64/multiarch/memmove-vec-unaligned-erms.S b/sysdeps/x86_64/multiarch/memmove-vec-unaligned-erms.S
index 39416265e6..7b69c9d471 100644
--- a/sysdeps/x86_64/multiarch/memmove-vec-unaligned-erms.S
+++ b/sysdeps/x86_64/multiarch/memmove-vec-unaligned-erms.S
@@ -580,14 +580,6 @@ L(nop):
 	/* Align if doesn't cost too much code size.  */
 	.p2align 4,, 10
 L(more_8x_vec):
-	/* Check if non-temporal move candidate.  */
-#if (defined USE_MULTIARCH || VEC_SIZE == 16) && IS_IN (libc)
-	/* Check non-temporal store threshold.  */
-	cmp	__x86_shared_non_temporal_threshold(%rip), %RDX_LP
-	ja	L(large_memcpy_2x)
-#endif
-
-L(more_8x_vec_check):
 #if ALIGN_MOVSB || !AVOID_SHORT_DISTANCE_REP_MOVSB
 	VMOVU	(%rsi), %VEC(4)
 #endif
@@ -599,6 +591,14 @@ L(more_8x_vec_check):
 #else
 	jb	L(more_8x_vec_backward_test)
 #endif
+
+	/* Check if non-temporal move candidate.  */
+#if (defined USE_MULTIARCH || VEC_SIZE == 16) && IS_IN (libc)
+	/* Check non-temporal store threshold.  */
+	cmp	__x86_shared_non_temporal_threshold(%rip), %RDX_LP
+	ja	L(large_memcpy_2x)
+#endif
+
 	/* Entry if rdx is greater than movsb or stop movsb threshold but
 	   there is overlap with dst > src.  */
 
@@ -609,12 +609,14 @@ L(more_8x_vec_check):
 	addl	%r8d, %ecx
 #if !ALIGN_MOVSB && AVOID_SHORT_DISTANCE_REP_MOVSB
 L(more_8x_vec_forward):
+L(more_8x_vec_check):
 	VMOVU	(%rsi), %VEC(4)
 	/* If jumped to here this will always be fall through.  */
 	jz	L(more_8x_vec_backward)
 #else
 	jz	L(more_8x_vec_backward)
 L(more_8x_vec_forward):
+L(more_8x_vec_check):
 #endif
 	/* Entry if rdx is greater than movsb or stop movsb threshold but
 	   there is overlap with dst > src.  */
-- 
2.25.1

