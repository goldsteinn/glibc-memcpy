From 3849cdcf704e39a9873696c6e75e85ad3ab8ad79 Mon Sep 17 00:00:00 2001
From: Noah Goldstein <goldstein.w.n@gmail.com>
Date: Wed, 22 Sep 2021 20:38:27 -0500
Subject: [PATCH 07/12] v1

---
 .../multiarch/memset-vec-unaligned-erms.S     | 22 +++++++++++++------
 1 file changed, 15 insertions(+), 7 deletions(-)

diff --git a/sysdeps/x86_64/multiarch/memset-vec-unaligned-erms.S b/sysdeps/x86_64/multiarch/memset-vec-unaligned-erms.S
index 3ba1a42814..8f89e91392 100644
--- a/sysdeps/x86_64/multiarch/memset-vec-unaligned-erms.S
+++ b/sysdeps/x86_64/multiarch/memset-vec-unaligned-erms.S
@@ -184,7 +184,7 @@ L(last_2x_vec):
 	VZEROUPPER_RETURN
 
 	.p2align 4,, 10
-#if defined USE_MULTIARCH && IS_IN (libc)
+#if defined USE_MULTIARCH && IS_IN (libc)    
 L(stosb_close):
 	movzbl	%sil, %eax
 	mov	%RDX_LP, %RCX_LP
@@ -193,7 +193,7 @@ L(stosb_close):
 	mov	%RDX_LP, %RAX_LP
 	VZEROUPPER_RETURN
 
-	.p2align 4,, 10
+	.p2align 4
 L(stosb_more_2x_vec):
 	cmp	__x86_rep_stosb_threshold(%rip), %RDX_LP
 	ja	L(stosb_close)
@@ -212,11 +212,21 @@ L(more_2x_vec):
 	/* Try and have this cmp/jcc on same cache line as target and
 	   fallthrough.  */
 	cmpq	$(VEC_SIZE * 8), %rdx
-	jbe	L(last_4x_vec)
+	ja	L(loop_4x_vec)
+	VMOVU	%VEC(0), (VEC_SIZE * -4)(%rdi)
+	VMOVU	%VEC(0), (VEC_SIZE * -3)(%rdi)
+	VMOVU	%VEC(0), (VEC_SIZE * -2)(%rdi)
+	VMOVU	%VEC(0), (VEC_SIZE * -1)(%rdi)
+	VZEROUPPER_RETURN
+
+	.p2align 4
 L(loop_4x_vec):
 	leaq	(VEC_SIZE * 4 - LOOP_4X_OFFSET)(%rax), %rcx
 	andq	$-(VEC_SIZE * 2), %rcx
-	.p2align 4,, 11
+#if LOOP_4X_OFFSET == 0
+	addq	$-(VEC_SIZE * 4), %rdi
+#endif
+	.p2align 4
 L(loop):
 	VMOVA	%VEC(0), (LOOP_4X_OFFSET)(%rcx)
 	VMOVA	%VEC(0), (LOOP_4X_OFFSET + VEC_SIZE)(%rcx)
@@ -225,8 +235,6 @@ L(loop):
 	subq	$-(VEC_SIZE * 4), %rcx
 	cmpq	%rdi, %rcx
 	jb	L(loop)
-	.p2align 4,, 4
-L(last_4x_vec):
 	VMOVU	%VEC(0), (LOOP_4X_OFFSET + VEC_SIZE * 0)(%rdi)
 	VMOVU	%VEC(0), (LOOP_4X_OFFSET + VEC_SIZE * 1)(%rdi)
 	VMOVU	%VEC(0), (LOOP_4X_OFFSET + VEC_SIZE * 2)(%rdi)
@@ -238,7 +246,7 @@ L(return):
 	ret
 #endif
 
-	.p2align 4,, 8
+	.p2align 4
 L(less_vec):
 	/* Less than 1 VEC.  */
 #if VEC_SIZE != 16 && VEC_SIZE != 32 && VEC_SIZE != 64
-- 
2.25.1

