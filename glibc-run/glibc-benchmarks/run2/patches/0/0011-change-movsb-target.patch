From dc59621c6c33e4a7bccb2231532fba95106794b3 Mon Sep 17 00:00:00 2001
From: Noah Goldstein <goldstein.w.n@gmail.com>
Date: Sun, 22 Aug 2021 20:52:00 -0400
Subject: [PATCH 11/11] change movsb target

---
 sysdeps/x86_64/multiarch/memmove-vec-unaligned-erms.S | 6 ++++--
 1 file changed, 4 insertions(+), 2 deletions(-)

diff --git a/sysdeps/x86_64/multiarch/memmove-vec-unaligned-erms.S b/sysdeps/x86_64/multiarch/memmove-vec-unaligned-erms.S
index 95f3d10bd8..042f8f6c88 100644
--- a/sysdeps/x86_64/multiarch/memmove-vec-unaligned-erms.S
+++ b/sysdeps/x86_64/multiarch/memmove-vec-unaligned-erms.S
@@ -407,14 +407,13 @@ L(copy_8_15):
 #endif
 
 #if defined USE_MULTIARCH && IS_IN (libc)
-	// .p2align 4
 L(movsb):
 	movq	%rdi, %rcx
 	subq	%rsi, %rcx
 	cmpq	%rdx, %rcx
 	jb	L(more_8x_vec_backward_check_nop)
 	cmp	__x86_rep_movsb_stop_threshold(%rip), %RDX_LP
-	jae	L(more_8x_vec)
+	jae	L(large_memcpy_2x_check)
 # if AVOID_SHORT_DISTANCE_REP_MOVSB
 	andl	$X86_STRING_CONTROL_AVOID_SHORT_DISTANCE_REP_MOVSB, __x86_string_control(%rip)
 	jz	L(skip_short_movsb_check)
@@ -575,6 +574,9 @@ L(loop_4x_vec_backward):
 
 #if (defined USE_MULTIARCH || VEC_SIZE == 16) && IS_IN (libc)
 	.p2align 4
+L(large_memcpy_2x_check):
+    cmp	__x86_shared_non_temporal_threshold(%rip), %RDX_LP
+	jb	L(more_8x_vec_forward)
 L(large_memcpy_2x):
 	/* Compute absolute value of difference between source and destination.
 	 */
-- 
2.25.1

